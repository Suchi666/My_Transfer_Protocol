// int init(){
//     pid_t cpid;
//     cpid=fork();
//     if(cpid<0){
//         printf("Fork Error\n");
//     }
//     else if(cpid==0){
//         char *args[] = {"gnome-terminal", "--", "bash", "-c", "./init; exec bash", NULL}; 
//         execvp("gnome-terminal",args);
//         exit(EXIT_SUCCESS);
//     }else{
//         return 1;
//     }
// }


    // Lock the mutex
    if (sem_wait(mutex) == -1) {
        perror("Failed to lock mutex");
        return 1;
    }

    printf("Mutex locked\n");

    // Simulate some critical section
    sleep(2);

    // Unlock the mutex
    if (sem_post(mutex) == -1) {
        perror("Failed to unlock mutex");
        return 1;
    }

    printf("Mutex unlocked\n");

    // Close and unlink the named mutex
    sem_close(mutex);
    sem_unlink(mutexName);